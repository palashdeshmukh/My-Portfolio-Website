{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Palash\\\\OneDrive\\\\Desktop\\\\MyResume\\\\resume-project\\\\src\\\\component\\\\ProjectsCard.jsx\";\nimport React, { Component } from 'react';\nimport '../component-styles/project.css';\nimport Slider from \"react-slick\";\nimport ProjectCardDesign from './ProjectCardDesign';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass ProjectsCard extends Component {\n  constructor(props) {\n    super(props);\n    this.updateSlidesToShow = () => {\n      // Calculate the number of slides to show based on screen width\n      const screenWidth = window.innerWidth;\n      let newSlidesToShow = 3; // Default value\n      if (screenWidth <= 768) {\n        newSlidesToShow = 2; // Adjust for smaller screens\n      }\n\n      this.setState({\n        slidesToShow: newSlidesToShow\n      });\n    };\n    this.state = {\n      slidesToShow: 3 // Default number of slides to show\n    };\n  }\n\n  componentDidMount() {\n    // Call the updateSlidesToShow function when the component mounts\n    this.updateSlidesToShow();\n    window.addEventListener('resize', this.updateSlidesToShow);\n  }\n  componentWillUnmount() {\n    // Remove the event listener when the component unmounts\n    window.removeEventListener('resize', this.updateSlidesToShow);\n  }\n  render() {\n    const settings = {\n      dots: true,\n      infinite: true,\n      slidesToShow: this.state.slidesToShow,\n      // Use the dynamically calculated value\n      slidesToScroll: this.state.slidesToShow,\n      // Use the same value for scrolling\n      autoplay: true,\n      speed: 500\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"project-main-card-container\",\n      children: /*#__PURE__*/_jsxDEV(Slider, {\n        ...settings\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default ProjectsCard;","map":{"version":3,"names":["React","Component","Slider","ProjectCardDesign","jsxDEV","_jsxDEV","ProjectsCard","constructor","props","updateSlidesToShow","screenWidth","window","innerWidth","newSlidesToShow","setState","slidesToShow","state","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","render","settings","dots","infinite","slidesToScroll","autoplay","speed","id","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/Palash/OneDrive/Desktop/MyResume/resume-project/src/component/ProjectsCard.jsx"],"sourcesContent":["import React, { Component } from 'react';\r\nimport '../component-styles/project.css';\r\nimport Slider from \"react-slick\";\r\nimport ProjectCardDesign from './ProjectCardDesign';\r\n\r\nclass ProjectsCard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      slidesToShow: 3, // Default number of slides to show\r\n    };\r\n  }\r\n\r\n  updateSlidesToShow = () => {\r\n    // Calculate the number of slides to show based on screen width\r\n    const screenWidth = window.innerWidth;\r\n    let newSlidesToShow = 3; // Default value\r\n    if (screenWidth <= 768) {\r\n      newSlidesToShow = 2; // Adjust for smaller screens\r\n    }\r\n    this.setState({ slidesToShow: newSlidesToShow });\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Call the updateSlidesToShow function when the component mounts\r\n    this.updateSlidesToShow();\r\n    window.addEventListener('resize', this.updateSlidesToShow);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    // Remove the event listener when the component unmounts\r\n    window.removeEventListener('resize', this.updateSlidesToShow);\r\n  }\r\n\r\n  render() {\r\n    const settings = {\r\n      dots: true,\r\n      infinite: true,\r\n      slidesToShow: this.state.slidesToShow, // Use the dynamically calculated value\r\n      slidesToScroll: this.state.slidesToShow, // Use the same value for scrolling\r\n      autoplay: true,\r\n      speed: 500,\r\n    };\r\n\r\n    return (\r\n      <div id='project-main-card-container'>\r\n        <Slider {...settings}>\r\n          {/* Your project cards here */}\r\n        </Slider>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProjectsCard;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAO,iCAAiC;AACxC,OAAOC,MAAM,MAAM,aAAa;AAChC,OAAOC,iBAAiB,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,YAAY,SAASL,SAAS,CAAC;EACnCM,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IAAC,KAMfC,kBAAkB,GAAG,MAAM;MACzB;MACA,MAAMC,WAAW,GAAGC,MAAM,CAACC,UAAU;MACrC,IAAIC,eAAe,GAAG,CAAC,CAAC,CAAC;MACzB,IAAIH,WAAW,IAAI,GAAG,EAAE;QACtBG,eAAe,GAAG,CAAC,CAAC,CAAC;MACvB;;MACA,IAAI,CAACC,QAAQ,CAAC;QAAEC,YAAY,EAAEF;MAAgB,CAAC,CAAC;IAClD,CAAC;IAbC,IAAI,CAACG,KAAK,GAAG;MACXD,YAAY,EAAE,CAAC,CAAE;IACnB,CAAC;EACH;;EAYAE,iBAAiBA,CAAA,EAAG;IAClB;IACA,IAAI,CAACR,kBAAkB,CAAC,CAAC;IACzBE,MAAM,CAACO,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAACT,kBAAkB,CAAC;EAC5D;EAEAU,oBAAoBA,CAAA,EAAG;IACrB;IACAR,MAAM,CAACS,mBAAmB,CAAC,QAAQ,EAAE,IAAI,CAACX,kBAAkB,CAAC;EAC/D;EAEAY,MAAMA,CAAA,EAAG;IACP,MAAMC,QAAQ,GAAG;MACfC,IAAI,EAAE,IAAI;MACVC,QAAQ,EAAE,IAAI;MACdT,YAAY,EAAE,IAAI,CAACC,KAAK,CAACD,YAAY;MAAE;MACvCU,cAAc,EAAE,IAAI,CAACT,KAAK,CAACD,YAAY;MAAE;MACzCW,QAAQ,EAAE,IAAI;MACdC,KAAK,EAAE;IACT,CAAC;IAED,oBACEtB,OAAA;MAAKuB,EAAE,EAAC,6BAA6B;MAAAC,QAAA,eACnCxB,OAAA,CAACH,MAAM;QAAA,GAAKoB;MAAQ;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEZ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAEV;AACF;AAEA,eAAe3B,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}